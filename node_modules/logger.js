var fs = require('fs');

function Logger(config) {
	var log_file, day, date;
	date = new Date();
	day = date.getDay();
	log_file = config.file.replace(/%Y/g, date.getFullYear())
					.replace(/%M/g, (date.getMonth() > 8) ? date.getMonth() + 1 : '0' + (date.getMonth() + 1))
					.replace(/%D/g, (date.getDate() > 9) ? date.getDate() : '0' + date.getDate());
	log_file = fs.createWriteStream(log_file, {
		flags: 'a'
	});

	this.log = function (msg) {
		if (day !== new Date().getDay()) {
			log_file.end();
			date = new Date();
			day = date.getDay();
			log_file = config.file.replace(/%Y/g, date.getFullYear())
							.replace(/%M/g, (date.getMonth() > 8) ? date.getMonth() + 1 : '0' + (date.getMonth() + 1))
							.replace(/%D/g, (date.getDate() > 9) ? date.getDate() : '0' + date.getDate());
			log_file = fs.createWriteStream(log_file);
		}

		if (msg === '') {
			return;
		}

		var data = this.parse(msg);
		if (data) {
			log_file.write(data + '\n', 'utf8');
		}
	};

	//returns a JSON object
	this.parse = function (msg) {
		var data, info, current = new Date();

		info = /^:([^!]+)!([^@]+)@([^ ]+) ([A-Z]+) :?(.+)$/.exec(msg);
		if (info) {
			data = {
				time: current.getTime(),
				user: {
					nick: info[1],
					user: info[2],
					host: info[3]
				},
				cmd: info[4]
			}

			switch (info[4]) {
				case 'JOIN':
					data.chan = info[5];
					break;

				case 'KICK':
					info = /^([^ ]+) ([^ ]+) ?:?(.+)?$/.exec(info[5]);
					data.chan = info[1];
					data.nick = info[2];
					data.msg = info[3];
					break;

				case 'MODE':
					info = /^([^ ]+) (.+)$/.exec(info[5]);
					data.chan = info[1];
					data.msg = info[2];
					break;

				case 'NICK':
					data.nick = info[5];
					break;

				case 'NOTICE':
				case 'PRIVMSG':
					info = /^([^ ]+) :(.+)$/.exec(info[5]);
					if (info[1].search('#') === -1) {
						return false;
					}
					data.chan = info[1];
					var action = /^\u0001ACTION (.+)\u0001$/.exec(info[2]);
					data.msg = (action && !!(data.cmd = 'ACTION')) ? action[1] : info[2];
					break;

				case 'PART':
					info = /^([^ ]+) ?:?(.+)?$/.exec(info[5]);
					data.chan = info[1];
					data.msg = info[2];
					break;

				case 'QUIT':
					data.msg = info[5];
					break;

				case 'TOPIC':
					info = /^([^ ]+) :(.+)$/.exec(info[5]);
					data.chan = info[1];
					data.msg = info[2];
					break;

				default:
					return false;
			}
		}

		return JSON.stringify(data);
	};
}

module.exports = Logger;
